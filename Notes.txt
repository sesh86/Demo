Day 3:
-Add Bootstrap/React Strap/React Bootstrap
-Map/Filter
-Onchange function - Search Feature

Day 4:
-Change port of react application - modify start in package.json
  "start": "set PORT=80 && react-scripts start",
-Events - onChange, onClick
-diff bet onclick={} and onclick={()=>}, in the latter 'this' will be bound - https://reactjs.org/docs/handling-events.html
-This is not React-specific behavior; it is a part of how functions work in JavaScript. Generally, if you refer to a method without () after it, such as onClick={this.handleClick}, you should bind that method.
-function should be bound to be called on DOM events. Three diff ways to bind
  1) Explicitly bind the function in class eg: this.resumeTime = this.resumeTime.bind(this);
  2) Create the function as bound method. eg: pauseTime = () => {clearInterval(this.interval);this.disableButton(false,true,true);}
  3) Bind it in the event - eg: onClick={()=>this.resumeTime()}
-onClick={this.fun} will invoke function on click.
-onClick={this.fun()} will invoke the function right away when the page loads
-Stateless component - eg: const App =() => {}
-Life Cycle Methods 1) Constructor, componentWillMount, render, componentDidMount - First time load
                    2) componentWillReceiveProps, shouldComponentUpdate, componentWillUpdate, render, componentDidUpdate - when there's a change in the component or the parent
                    3) componentWillUnmount - When components unmounts
-Lifecycle methods - https://code.likeagirl.io/understanding-react-component-life-cycle-49bf4b8674de

Day 5: 
  Part1:
  -npm i react-router-dom
  -create routes in index.js
  -create new component - NavBar
  -Use NavLink/Link in NavBar
  -Exact Path vs Path
